---
import { SIDEBAR, MENU, Frontmatter } from "../../config"

export type Props = {
  currentPage: string
  content: Frontmatter
}
const { currentPage, content } = Astro.props as Props

// SIDEBAR is a flat array. Group it by sections to properly render.
const sidebarSections = !!SIDEBAR[content?.section] ? SIDEBAR[content?.section] : []
const isExternal = (path: string) => /^(https?:|mailto:|tel:)/.test(path)

const removeSlashes = function (url: string) {
  let sanitizedUrl = url
  if (sanitizedUrl.charAt(0) == "/") sanitizedUrl = sanitizedUrl.substr(1)
  if (sanitizedUrl.charAt(sanitizedUrl.length - 1) == "/")
    sanitizedUrl = sanitizedUrl.substr(0, sanitizedUrl.length - 1)

  return sanitizedUrl
}

const currentPageMatch = removeSlashes(currentPage.slice(1))
---

<nav aria-labelledby="grid-left">
  <ul id="mobile-menu" class="nav-groups">
    <li style="margin: 0; padding-bottom: 0;">
      <div class="nav-group">
        <h2 class="nav-group-title">NAVIGATION</h2>
        <ul>
          {
            MENU.en.map((child) => (
              <li class="nav-link">
                <a href={`${child.link}`}>{child.text}</a>
              </li>
            ))
          }
        </ul>
      </div>
    </li>
  </ul>
  <hr class="menu-separator" />
  <ul class="nav-groups sidebar-nav-groups">
    {
      sidebarSections.map((section) => (
        <li>
          <div class="nav-group">
            <h2 class="nav-group-title">{section.section}</h2>
            <ul>
              {!!section.contents &&
                section.contents.map((child) => (
                  <>
                    <li class="nav-link">
                      <a
                        href={isExternal(child.url) ? `${child.url}` : `${Astro.site.pathname}${child.url}`}
                        target={isExternal(child.url) ? "_blank" : "_self"}
                        aria-current={`${currentPageMatch === removeSlashes(child.url) ? "page" : "false"}`}
                      >
                        {child.title}
                        {isExternal(child.url) && (
                          <img
                            src="/assets/icons/external-link.svg"
                            alt="external link"
                            style="width:12px; height: 12px"
                          />
                        )}
                      </a>
                    </li>
                    {!!child.children && (
                      <ul>
                        {child.children.map((childItem) => (
                          <li class="nav-link nested">
                            <a
                              href={
                                isExternal(childItem.url) ? childItem.url : `${Astro.site.pathname}${childItem.url}`
                              }
                              target={isExternal(child.url) ? "_blank" : "_self"}
                              aria-current={`${currentPageMatch === removeSlashes(childItem.url) ? "page" : "false"}`}
                            >
                              {childItem.title}
                              {isExternal(childItem.url) && (
                                <img
                                  src="/assets/icons/external-link.svg"
                                  alt="external link"
                                  style="width:12px; height: 12px"
                                />
                              )}
                            </a>
                          </li>
                        ))}
                      </ul>
                    )}
                  </>
                ))}
            </ul>
          </div>
        </li>
      ))
    }
  </ul>
</nav>

<script is:inline>
  window.addEventListener("DOMContentLoaded", (event) => {
    var target = document.querySelector('[aria-current="page"]')
    if (target && target.offsetTop > window.innerHeight - 100) {
      document.querySelector(".sidebar-nav-groups").scrollTop = target.offsetTop
    }
  })
</script>

<style>
  .menu-separator {
    border-top: 1px solid var(--theme-divider);
  }
  @media (min-width: 50em) {
    #mobile-menu,
    .menu-separator {
      display: none;
      height: 0;
    }
  }
  nav {
    width: 100%;
  }

  .nav-groups {
    height: 100%;
    padding: 2rem 0;
    overflow-x: visible;
    overflow-y: auto;
    max-height: 100vh;
  }

  .nav-groups > li + li {
    margin-top: 2rem;
  }

  .nav-groups > :first-child {
    padding-top: var(--doc-padding);
  }

  .nav-groups > :last-child {
    padding-bottom: 2rem;
    margin-bottom: var(--theme-navbar-height);
  }

  .nav-group-title {
    font-size: 1rem;
    font-weight: 700;
    padding: 0.1rem 1rem;
    text-transform: uppercase;
    margin-bottom: 0.5rem;
  }

  .nav-link a {
    font-size: 1rem;
    margin: 1px;
    padding: 0.3rem 1rem;
    font: inherit;
    color: inherit;
    text-decoration: none;
    display: block;
  }

  .nav-link a:hover,
  .nav-link a:focus {
    background-color: var(--theme-bg-hover);
  }

  .nav-link a[aria-current="page"] {
    color: var(--theme-text-accent);
    background-color: var(--theme-bg-accent);
    font-weight: 600;
  }

  :global(:root.theme-dark) .nav-link a[aria-current="page"] {
    color: hsla(var(--color-base-white), 100%, 1);
  }

  .nested {
    padding-left: var(--space-4x);
  }

  @media (min-width: 50em) {
    .nav-groups {
      padding: 0;
    }
  }
</style>
