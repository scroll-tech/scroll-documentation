import { useState, useEffect, useMemo } from "preact/hooks"
import { clsx } from "~/lib"
import styles from "./NetworkSelector.module.css"

const NetworkSelector = ({ value, onChange }) => {
  const [isModalOpen, setIsModalOpen] = useState(false)
  const networks = ["All networks", "Mainnet", "Testnet"]

  const handleNetworkClick = (network) => {
    onChange(network)
    setIsModalOpen(!isModalOpen)
  }

  const filteredNetworks = useMemo(() => {
    if (isModalOpen) {
      return [value, ...networks.filter((network) => network !== value)]
    }
    return [value]
  }, [isModalOpen, networks, value])

  return (
    <div className={styles.container}>
      <div className={clsx(styles.networkSelector)}>
        <svg
          className="hidden md:block"
          style={{ height: "38px", lineHeight: "1" }}
          xmlns="http://www.w3.org/2000/svg"
          width="27"
          height="27"
          viewBox="0 0 27 27"
          fill="none"
        >
          <path
            d="M21.5156 3.375C20.5093 3.37723 19.5448 3.77797 18.8333 4.48954C18.1217 5.20111 17.721 6.16557 17.7187 7.17187C17.7257 8.11138 18.0838 9.0143 18.7228 9.70312L15.4659 14.7656C14.8491 14.4835 14.1782 14.3396 13.5 14.3437C12.8916 14.3423 12.2889 14.4617 11.727 14.6949C11.165 14.9281 10.6549 15.2704 10.2262 15.7022L8.13372 14.0147C8.33093 13.5888 8.43451 13.1256 8.43747 12.6562C8.4408 11.8958 8.18721 11.1565 7.71779 10.5582C7.24838 9.9599 6.59067 9.53767 5.85127 9.35994C5.11186 9.18222 4.33411 9.25942 3.64406 9.57902C2.95402 9.89863 2.39214 10.4419 2.0495 11.1208C1.70686 11.7997 1.60354 12.5744 1.75629 13.3194C1.90904 14.0644 2.3089 14.7359 2.89107 15.2252C3.47324 15.7145 4.20358 15.9928 4.96372 16.015C5.72386 16.0373 6.46924 15.8022 7.07903 15.3478L9.28122 17.0944C9.01235 17.6881 8.87423 18.3326 8.87622 18.9844C8.87815 19.7424 9.06574 20.4884 9.42258 21.1571C9.77941 21.8259 10.2946 22.3971 10.9232 22.8207C11.5518 23.2444 12.2746 23.5076 13.0284 23.5874C13.7822 23.6672 14.544 23.5611 15.2474 23.2784C15.9507 22.9958 16.5741 22.5451 17.063 21.9659C17.552 21.3866 17.8916 20.6964 18.0521 19.9556C18.2127 19.2148 18.1894 18.446 17.9842 17.7162C17.779 16.9865 17.3981 16.3182 16.875 15.7697L20.1403 10.7072C20.5782 10.88 21.0448 10.9688 21.5156 10.9687C22.5226 10.9687 23.4883 10.5687 24.2004 9.85667C24.9124 9.14462 25.3125 8.17887 25.3125 7.17187C25.3125 6.16488 24.9124 5.19913 24.2004 4.48708C23.4883 3.77503 22.5226 3.375 21.5156 3.375ZM3.37497 12.6562C3.37497 12.3225 3.47394 11.9962 3.65937 11.7187C3.84479 11.4412 4.10834 11.2249 4.41669 11.0972C4.72504 10.9695 5.06434 10.9361 5.39169 11.0012C5.71903 11.0663 6.01971 11.227 6.25571 11.463C6.49172 11.699 6.65243 11.9997 6.71755 12.327C6.78266 12.6544 6.74924 12.9937 6.62152 13.302C6.4938 13.6104 6.2775 13.8739 6 14.0594C5.72249 14.2448 5.39623 14.3437 5.06247 14.3437C4.61492 14.3437 4.1857 14.166 3.86923 13.8495C3.55276 13.533 3.37497 13.1038 3.37497 12.6562ZM13.5 21.9375C12.9159 21.9375 12.3449 21.7643 11.8593 21.4398C11.3737 21.1153 10.9952 20.6541 10.7716 20.1145C10.5481 19.5749 10.4896 18.9811 10.6036 18.4082C10.7175 17.8354 10.9988 17.3092 11.4118 16.8962C11.8248 16.4832 12.351 16.2019 12.9238 16.088C13.4967 15.974 14.0905 16.0325 14.6301 16.256C15.1697 16.4796 15.6309 16.8581 15.9554 17.3437C16.2799 17.8293 16.4531 18.4003 16.4531 18.9844C16.4531 19.7676 16.142 20.5187 15.5881 21.0725C15.0343 21.6264 14.2832 21.9375 13.5 21.9375ZM21.5156 9.28125C21.08 9.28203 20.6551 9.1463 20.3006 8.89312C20.0401 8.6953 19.8285 8.44024 19.6822 8.14765C19.5359 7.85505 19.4588 7.53275 19.4568 7.20562C19.4502 6.78492 19.5696 6.37186 19.7996 6.01952C20.0295 5.66718 20.3596 5.39167 20.7474 5.2284C21.1352 5.06512 21.5629 5.02155 21.9757 5.10328C22.3884 5.185 22.7673 5.38829 23.0636 5.68702C23.3599 5.98575 23.5601 6.36627 23.6384 6.77966C23.7168 7.19305 23.6697 7.62043 23.5033 8.00686C23.3369 8.3933 23.0587 8.72113 22.7045 8.94823C22.3503 9.17532 21.9362 9.2913 21.5156 9.28125Z"
            fill="#101010"
          />
        </svg>
        <ul className={styles.optionsList}>
          {filteredNetworks.map((network, idx) => {
            return (
              <li key={network} value={network} onClick={() => handleNetworkClick(network)}>
                {network}
              </li>
            )
          })}
        </ul>
        <svg
          style={{ height: "38px", lineHeight: "1", transform: isModalOpen ? "rotate(180deg)" : "rotate(0deg)" }}
          xmlns="http://www.w3.org/2000/svg"
          width="14"
          height="8"
          viewBox="0 0 14 8"
          fill="none"
        >
          <path
            d="M8.31172 7.5L5.68828 7.5L6.11959e-07 0.5L2.62031 0.5L7.02504 5.92923C8.50894 4.10606 9.74553 2.32317 11.3766 0.500001L14 0.500001C11.8242 2.83333 10.4875 5.16667 8.31172 7.5Z"
            fill="#101010"
          />
        </svg>
      </div>
    </div>
  )
}

export default NetworkSelector
