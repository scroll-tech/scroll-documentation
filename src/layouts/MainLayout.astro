---
import HeadCommon from "../components/HeadCommon.astro"
import HeadSEO from "../components/HeadSEO.astro"
import Header from "../components/Header/Header.astro"
import PageContent from "../components/PageContent/PageContent.astro"
import LeftSidebar from "../components/LeftSidebar/LeftSidebar.astro"
import RightSidebar from "../components/RightSidebar/RightSidebar.astro"
import * as CONFIG from "../config"
// import { NewsletterCTA } from "../components/Footer/NewsletterCTA.tsx"
import Footer from "~/components/Footer/Footer.astro"
import { changeLanguage } from "i18next"
import { ViewTransitions } from "astro:transitions"
import AskCookbook from "~/components/AskCookbook.astro"

const { content = {}, frontmatter } = Astro.props
// Astro.props?.headings is for .mdx pages, Astro.props?.content?.astro.headings is for .md pages
const headings = Astro.props?.headings || Astro.props?.content?.astro.headings

const currentPage = new URL(Astro.request.url).pathname
const currentFile = `src/content/docs/${content.file}`

const githubEditUrl = CONFIG.GITHUB_EDIT_URL + currentFile
const formattedContentTitle = content.title
  ? `${content.title} | ${CONFIG.SITE.title}`
  : `${CONFIG.PAGE.titleFallback} | ${CONFIG.SITE.title}`
const canonicalURL = new URL(Astro.url.pathname, Astro.site)
changeLanguage(content.lang)

// TODO: Part 1 - figure out if we need this script that will add a wallet injected depending on metadata of an article
// const includeLinkToWalletScript = !!Astro.props?.content?.metadata?.linkToWallet
---

<html transition:animate="none" dir={content.dir ?? "ltr"} lang={content.lang ?? "en-us"} class="initial">
  <head>
    <ViewTransitions />
    <HeadCommon />
    <HeadSEO {content} {canonicalURL} />
    <title>{formattedContentTitle}</title>
    <!-- Katex -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.15.2/dist/katex.min.css"
      integrity="sha384-MlJdn/WNKDGXveldHDdyRP1R4CTHr3FeuDNfhsLPYrq2t0UBkUdK2jyTnXPEK1NQ"
      crossorigin="anonymous"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Fira+Code:wght@400;500&family=Roboto:ital,wght@0,400;0,500;0,700;1,400;1,500;1,700&family=Roboto+Mono:ital,wght@0,400;0,500;0,600;1,400;1,500;1,600&display=swap"
      rel="stylesheet"
    />

    <style>
      body {
        width: 100%;
        display: grid;
        grid-template-rows: var(--theme-navbar-height) 1fr;
        --gutter: var(--space-6x);
        --doc-padding: 65px;
      }

      .layout {
        display: grid;
        grid-auto-flow: column;
        grid-template-columns: 0fr minmax(0, var(--max-width)) 0fr;
        overflow-x: hidden;
        margin-left: 20px;
        margin-right: 20px;
      }

      .layout :global(*) {
        font-family: var(--font-family-body-text);
      }

      .layout :global(> *) {
        width: 100%;
        height: 100%;
      }

      .grid-sidebar {
        width: 100%;
        max-height: 100vh;
        position: sticky;
        top: 0;
        padding: 0;
      }

      #grid-left {
        position: fixed;
        z-index: 10;
        display: none;
        @apply bg-pure-white dark:bg-black;
      }

      #grid-main {
        padding: var(--doc-padding) 0;
        grid-column: 2;
        display: flex;
        flex-direction: column;
        height: 100%;
        overflow: auto;
      }

      #grid-right {
        display: none;
        padding-top: 85px;
      }

      @media screen and (min-width: 50em) {
        body {
          width: 100%;
          display: grid;
          grid-template-rows: var(--theme-navbar-height) 1fr;
          --gutter: var(--space-6x);
          --doc-padding: 100px;
        }
        .layout {
          overflow: initial;
          /* grid-template-columns: 1fr 3fr; */
          grid-template-columns: 1fr minmax(0, 68vw);
          gap: 1.8em;
        }

        #grid-left {
          display: flex;
          position: sticky;
          grid-column: 1;
          background: transparent;
        }
      }

      @media screen and (min-width: 72em) {
        .layout {
          grid-template-columns: minmax(230px, 2fr) 7fr 3fr;
          padding-left: 0;
          padding-right: 0;
          margin-left: 20px;
          margin-right: 20px;
        }

        #grid-right {
          grid-column: 3;
          display: flex;
        }
      }

      @media screen and (max-width: 90em) and (min-width: 72em) {
        .wider-content {
          grid-template-columns: 1fr minmax(0, 68vw);
        }
        .wider-content #grid-right {
          display: none;
        }
      }
    </style>
    <style is:global>
      .layout > * {
        width: 100%;
        height: 100%;
      }

      .mobile-sidebar-toggle {
        overflow: hidden;
      }

      .mobile-sidebar-toggle #grid-left {
        display: block;
        top: 2rem;
        left: 0;
        padding-left: 20px;
        padding-right: 20px;
        height: calc(100% - 20px);
      }

      @media screen and (max-width: 50em) {
        .global-search-toggle {
          overflow: hidden;
        }
      }

      @media (min-width: 50em) {
        .mobile-sidebar-toggle #grid-left {
          padding-left: 0px;
        }
      }
    </style>
    <script>
      import "../scripts/index.ts"
    </script>
    <!-- TODO: Part 2 of includeLinkToWallet feature -->
    <!-- <script define:vars={{ includeLinkToWalletScript }}>
      window.includeLinkToWalletScript = includeLinkToWalletScript
    </script> -->
    <script define:vars={{ content }}>
      const persistedArticle = {
        title: content.title,
        url: content.url,
      }

      const recentArticles = JSON.parse(localStorage.getItem("recentArticles") || "[]")

      if (!recentArticles.some((article) => article.url === persistedArticle.url)) {
        recentArticles.unshift(persistedArticle)
        localStorage.setItem("recentArticles", JSON.stringify(recentArticles.slice(0, 5)))
      }
    </script>
    <script is:inline>
      var themeMode = localStorage.getItem("THEME_MODE")
      if (themeMode === "dark") {
        document.documentElement.classList.add("dark")
      } else {
        document.documentElement.classList.remove("dark")
      }
    </script>
    <script>
      document.addEventListener("astro:after-swap", () => {
        const themeMode = localStorage.getItem("THEME_MODE")
        themeMode === "dark"
          ? document.documentElement.classList.add("dark")
          : document.documentElement.classList.remove("dark")
      })
    </script>
  </head>

  <body>
    <Header frontmatter={content} />
    <main class={`layout ${content.widerContent ? "wider-content" : ""}`}>
      <aside id="grid-left" class="grid-sidebar" title="Site Navigation">
        <LeftSidebar currentPage={currentPage} {content} />
      </aside>
      <div id="grid-main">
        <PageContent {content} githubEditUrl={githubEditUrl} {headings} clientSideToc={!!frontmatter?.clientSideToc}>
          <slot />
        </PageContent>
      </div>
      <aside id="grid-right" class="grid-sidebar" title="Table of Contents">
        <RightSidebar {content} githubEditUrl={githubEditUrl} {headings} clientSideToc={!!frontmatter?.clientSideToc} />
      </aside>
    </main>
    <!-- <NewsletterCTA client:visible />
    <Footer client:idle />  This seems to break i18next in some cases.-->
    <Footer />
    <!-- TODO: Part 3 - Figure out if we need this footer script tag for linking to wallet. -->

    <!-- <script>
      //@ts-expect-error
      if (window.includeLinkToWalletScript) {
        //@ts-expect-error astro handles the .ts extension
        import("../scripts/link-to-wallet.ts")
      }
    </script> -->
    <AskCookbook />
  </body>
</html>
